# Configuration file of the testsuite.pl
#
# Use to configure both nodes and to change default commands of the testsuite.
# Important: after each argument put ; to finish the line otherwise it will not be set and can cause errors!

# Configuration of one Node
node node1 {
  # Syntax: addr <ip>
  # IP Address of the node that is visible to the internet. If this is left undefined
  # the testsuite will not start.
  #
  # Example: addr 192.168.1.10;
  #
  addr  10.25.91.10;
  
  # Syntax: port <p>
  # The port the testsuite will try to connect to. If this is left undefined
  # the testsuite will not start.
  #
  # Example: port 4000;
  #
  port  4000; 
}

# Configuration of second Node
node node2 {
  # Syntax: addr <ip>
  # IP Address of the node that is visible to the internet. If this is left undefined
  # the testsuite will not start.
  #
  # Example: addr 192.168.1.10;
  #
  addr  10.25.91.11;
  
  # Syntax: port <p>
  # The port the testsuite will try to connect to. If this is left undefined
  # the testsuite will not start.
  #
  # Example: port 4000;
  #
  port  4000;
}

# Set of default parameters of the testsuite
defaults {
  # Syntax: timeout <n>
  # Generall timeout limit of <n> seconds for the response of the executed command.
  #
  # If this is left undefined default is to wait 0 seconds = wait forever.
  #
  # Example: timeout 20;
  #
  timeout  10;
  
  # Syntax: latency <l>
  # 
  # The maximum time/clock difference between the two agents. If it's above
  # the given value, FIXME => sync
  #
  # If this is left undefined default latency is 0.5 seconds
  #
  # Example: latency 0.05;
  #
  latency  0.02;

  # Syntax: connect_timeout <n>
  # Timeout after trying to establish a connection after <n> seconds
  #
  # If this is left undefined default is to wait 3 seconds.
  #
  # Example: connect_timeout 1;
  #
  connect_timeout 1;

  # Syntax: timeserver <ip/host>
  # If nodes are out of sync, ntpdate <ip/host> will be sent to each node.
  #
  # If no timeserver is given, the testsuite will abort instead of trying
  # to syncronize the agents.
  #
  timeserver 10.25.91.12;
}

# Set of sequence commands to be executet on the nodes. See README for detailed
# information about available commands.
seq-commands {

  # check if we are in a stable state
  if ((get 'drbdsetup /dev/drbd0 state', on node1) =~ /Unknown/) {
    VERBOSE ("trouble with drbd on agents");
    die();
  }

  # switch from secondary to primary for a few times
  for (my $i = 0; $i < 3; ++$i) {
    cmd secondary;
    cmd primary, on node1;
  }

  # switch to secondary by given command
  cmd '/sbin/drbdadm secondary {resource}';
  
  # both agents should have following state within one second
  expected 'st', state 'Secondary/Secondary', timeout 1;
 
  # block network traffic on both nodes
  cmd link_down;

  # loss of connection should be detected within 15 seconds
  expected 'cs', state 'WFConnection', timeout 15;

  # accept network traffic on both nodes, sleep 3 seconds and request state
  cmd link_up;
  sleep 3;
  get 'drbdsetup /dev/drbd0 cstate', on node1;
}

