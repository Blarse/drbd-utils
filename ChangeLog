Latest:
------
 For even more detail, use "git log" or visit http://git.drbd.org/.

8.2.3 (api:86/proto:86-88)
--------
 * Released the online-verify feature from DRBD+ into drbd-8.2
 * Fixed the data-integrity-alg feature to work correctly
   in 'allow-two-primaries' mode.
 * Significant latency improvement: Implemented sane default
   CPU bindings (affinity mask) of threads, and added the tuning
   option 'cpu-mask'.
 * A completely new drbdmeta - finally dealing with
   all drbd-0.7 to drbd-8.x conversion cases correctly.
 * Merged all changes from 8.0.7 -> 8.0.8 into 8.2

8.2.1 (api:86/proto:86-87)
--------
 * Fixed the OOPS when _not_ using a shared secret on kernel 
   before Linux-2.6.19 (=old crypto API).
 * Support for drbd-proxy's configuration directives in drbdadm.
 * Look for /etc/drbd-82.conf before drbd-08.conf before drbd.conf
 * drbdadm now allows one to move the device, disk and meta-disk
   statements out of the host ("on") sections into the resource
   section. This allows you to shorten your config files.
 * Merged all changes from 8.0.6 -> 8.0.7 to 8.2

8.2.0 (api:86/proto:86-87)
--------
 * Branch for new features after 8.1 and 8.0. We will do a number of
   features that do not fiddle with the general architecture of DRBD.
   This will be like the the current Linux-2.6 development model.
 * Implemented the data-integrity-alg option. When this is set to
   one of the kernel's hash algorithms, such a hash is shipped with
   every user-data carrying packet. In case user-data is corrupted
   on the network DRBD protests by dropping the connection.

8.1.0 (api:86/proto:86)
--------
 * NOT YET RELEASED
 * this branch
   * will not receive new features compared to 8.0,
   * will receive any bug fixes done on 8.0.x,
   * will receive any code changes necessary for upstream kernel inclusion.

Changelog for fixes propagated from 8.0.x:
------------------------------------------

8.0.8 (api:86/proto:86)
--------
 * Improvements to the bitmap code. (The old code might re-enable
   interrupts by accident)
 * Fixed a endianness issue in the write protocol. C bit-fields are
   might by laid out differently on little/big endian machines.
 * Drbdadm's adjust forgot sometimes to adjust options values that
   where inherited from the common section, fixed that.
 * Removed dopd. It gets (and should be) shipped with heartbeat.
 * When peer authentication is enabled, you could trick drbd to send
   a state report packet before it authenticated itself. Fixed that.
 * Added robustness to resync pause/continue.
 * Drbdsetup should not report a random error if no netlink
   answer is received from the drbd module.
 * Fixes to error code paths. ( drbd_drain_block() and lc_alloc() )
 * Fixed a possible OOPS in case one manages to loose disk and
   network concurrently. (iSCSI disk and network over same switch)
 * Fixed the broadcasting of state change events to userspace.

8.0.7 (api:86/proto:86)
--------
 * Fixed drbdmeta's conversion of 07 style meta data.
 * Handle the failure of vmalloc() in the bitmap code more gracefully.
 * Do not pause resync on unconfigured devices.
 * Added missing pieces of the implementation of the "pri-lost" handler.
 * Added the "split-brain" handler.
 * Drop the network config after failure to authenticate.
 * Made it to compile on Linux-2.6.24-rc1.
 * Fixed an unlikely race that could cause a device to get stuck
   in SyncPause.
 * Online resizing failed to start resync properly (although it
   set up all the meta data correct). Fixed that.
 * Minor improvements to documentation and error messages.

8.0.6 (api:86/proto:86)
--------
 * Fixed DRBD to not deadlock while doing bitmap updates on Linux
   2.6.22 and later.
 * Make it compile on Linux-2.6.22 and later.
 * Removed a hard coded path to docbook DTDs from our SGML files,
   maybe improving the situation with building the documentation.
 * When a drbd connect attempt gets accepted onto a other program,
   that simply closes the socket, drbd stays for some seconds in the
   "BrokenPipe" network state. When one removed the network
   config during that time, drbd OOPSed. This is fixed now.
 * drbdmeta can now also initialize meta data on meta devices
   smaller than 128MB.
 * Added an explicit NULL argument to our ioctl() calls in drbdmeta.
 * Added scripts/block-drbd, which is a nice way hand over DRBD
   role assignment to Xen, allowing one to do Xen live migrations
   in a sane way.
 * Added scripts/pretty-proc-drbd.sh
 * Added an option to drbd.conf which instructs the init script
   to promote DRBD devices to primary role upon machine start up.

8.0.5 (api:86/proto:86)
--------
 * Changed the default behavior of the init script. Now the init
   script terminates in case the devices refuse to because they 
   had a split brain. Introduced an option to preserve the old
   behavior.
 * Fixed a bug where the local_cnt could get imbalanced upon a 
   state change.
 * Fixed an bug in the UUID algorithm, that could lead to both
   sides in cs:WFBitMapT state. It was triggered when the disk
   on the SyncTarget gets detached and attached.
 * Implemented proper size checking on strings that get communicated
   with DRBD's netlink protocol.
 * Changed the maximal length of device names from 32 characters to
   128 characters. (udev based disk names might be very long nowadays)
 * Fixed the after-sb-0pri policies discard-younger/discard-older
 * When the resync speed was changed to a considerably lower 
   value while resync was running, it could happen that we erroneously
   decremented the local_cnt too often.
 * Fixed a bug in the UUID code, that caused drbd to erroneously report 
   a split brain after changing the role of a diskless node multiple 
   times.
 * Both nodes ended up in SyncSource when a state change occurred on 
   one node while the disk state on the other node is in the temporal 
   'Negotiating' state. Fixed got fixed.
 * drbdmeta's parse/scan code for meta-data dumps got fixed for 
   huge devices, and an improved error reporting.
 * drbdadm had difficulties with option values of type string that
   start with an digit. Fixed.
 * Fixed a code path that should it make possible to unload the
   module even in case some of our receive buffers leaked.
 * The usermode helper program is now user definable. It is no
   longer hardcoded set to 'drbdadm'.

8.0.4 (api:86/proto:86)
--------
 * Fixed an OOPS in case you do an invalidate on an diskless device. And
   made invalidates on diskless devices possible by using drbdmeta.
 * Fix for an possible OOPS in drbd_al_to_on_disk_bm().
 * Fix for a possible OOPS. This issue was triggered when you do an
   attach very soon (ms) after the disk was dropped.
 * Fix for a race condition in receive_state(). Symptom was that the
   resync stalls at 100% on a node.
 * Some block devices fail requests by clearing the BIO_UPTODATE flag
   (that is ok), but not returning an error (that is strange). 
   We now deal with that correctly.
 * Drbdadm's parser will now reject config files with resources with 
   missing "on" sections. (Instead of segfaulting)
 * Init script continues in case the setup of a single resource fails.
 * Improvements to the "drbdsetup events" interface: Updates about
   the resync progress and initial state of all devices if called with "-a".
 * The benchmark/dm program can now also create custom bandwidth loads.

8.0.3 (api:86/proto:86)
--------
 * Fixed a race condition that could cause us to continue to traverse a bio
   after it was freed. (led to an OOPS)
 * Fixed a race condition that could cause us to use members of an ee, after
   it was freed. (led to various weirdness)
 * Language fixes for the man pages.
 * The drbdsetup commands (events, wait-connect,...) release the lock now.
 * Minor fixes and updates to the user land tools and to the peer outdater.

8.0.2 (api:86/proto:86)
--------
 * Removed a bug that could cause an OOPS in drbd_al_to_on_disk_bm()
 * Improved the robustness of the UUID based algorithm that decides
   about the resync direction.
 * Fixed the error handling in case a the open() of a backing
   block device fails.
 * Fixed a race condition that could cause a "drbdadm disconnect" to hang.
 * More verbosity in we can not claim a backing block device.
 * More verbosity and paranoia in the bitmap area.
 * On some vendor kernels 8.0.1 did not load because of kzalloc. fixed.
 * Fault injection can now not only be turned on or off, but can be 
   enabled on a per device basis.
 * Fixed the scripts and files needed to build drbd into a kernel.

8.0.1 (api:86/proto:86)
--------
 * Fixed some race conditions that could trigger an OOPS when the local disk
   fails and DRBD detaches itself from the failing disk.
 * Added a missing call to drbd_try_outdate_peer().
 * LVM's LVs expose ambiguous queue settings. When a RAID-0 (md) PV is
   used the present a segment size of 64k but at the same time allow only
   8 sectors. Fixed DRBD to deal with that fact correctly.
 * New option "always-asbp" to also use the after-after-split-brain-policy
   handlers, even it is not possible to determine from the UUIDs that
   the data of the two nodes was related in the past.
 * More verbosity in case a bio_add_page() fails.
 * Replaced kmalloc()/memset() with kzmalloc(), and a wrapper for older kernels
 * A fast version of drbd_al_to_on_disk_bm(). This is necessary for short
   (even sub-second) switchover times while having large "al-extents" settings.
 * Fixed drbdadm's array overflows (of on stack objects)
 * drbdsetup can now dump its usage in a XML format
 * New init script for gentoo
 * Fixed Typos in the usage of /proc/sysrq-trigger in the example config.

8.0.0 (api:86/proto:86)
--------
 * No effective changes to rc2.

8.0rc2 (api:86/proto:86)
--------
 * Added the well known automagically adjust drbd_config.h to
   make drbd compile on every by vendor's backports defaced 
   kernel. ( Linux-2.6.x only of course )
 * Fixed races with starting and finishing resync processes 
   while heavy application IO is going on.
 * Ported DRBD to the new crypto API (and added a emulation of the
   now API on top of the old one for older 2.6.x kernels)
 * Code to perform better on Ethernet networks with jumbo
   frames.
 * Bugfixes to our request code (race conditions).
 * Every error code that is returned by drbdsetup has a 
   textual description by now.

8.0rc1 (api:86/proto:85)
--------
 * The drbd-peer-outdater got updated to work in multi node heartbeat
   clusters. (But we still not succeeded to get this into Heartbeat's
   repository accepted.)
 * Fixed resync decision after a crash in a pri-pri cluster.
 * Implemented the ping-timeout option for "sub-second" failover clusters.
 * Implemented all the "violently" options in the reconnect handling.
 * Updated man pages of drbd.conf and drbdsetup.
 * Removed the "self-claiming" on secondary nodes.
 * Fixed an uncountable number of bugs.

8.0pre6 (api:85/proto:85)
--------
 * All panic() calls where removed from DRBD.
 * IO errors while accessing the backing storage device are now handled
   correct.
 * Conflict detection for two primaries is in place and tested.
 * More tracing stuff
 * Lots of bugs found and fixed

8.0pre5 (api:84/proto:83)
--------
 * The request code was completely rewritten.
 * The write conflict detection code for primary-primary is currently
   broken, but will be fixed soon.
 * drbdsetup is no longer based on IOCTL but works now via
   netlink/connector.
 * drbd_panic() is on its way out.
 * A runtime configurable tracing framework got added.
 * A lot of effort was put into finding and fixing bugs.

8.0pre4 (api:83/proto:82)
--------
 * Added the "drbd-peer-outdater" heartbeat plugin.
 * New ("cluster wide") state changes. (Cluster wide serialization of
   major state changes, like becoming primary, invalidating a disk etc...)
 * Write requests are now sent by the worker instead out of the process's
   context that calls make_request().
 * The worker thread no longer gets restarted upon loss of connection.
 * A test suite developed by students of 'FH Hagenberg' was added.

8.0pre3 (api:82/proto:80)
--------
 * Now it works on device mapper (LVM) as well as on "real" block devices.
 * Finally (after years) a sane "drbdadm adjust" implementation, which is
   really really robust.
 * Fixes for 64bit kernel / 32 bit userland environments
 * Fixes in the sys-v init script
 * Renamed "--do-what-I-say" to "--overwrite-data-of-peer". Hopefully
   people now understand what this option does.

8.0-pre2 (api:81/proto:80)
--------
 * removed the "on-disconnect" and "split-brain-fix" config options and
   added the "fencing" config option instead.
 * Updated all man pages to cover drbd-8.0
 * /proc/drbd shows the whole drbd_state_t, as well the logging of state
   changes shows every field of drbd_state_t now.
 * Deactivated most of the TCQ code for now, since it changed again
   in the mainline kernel.
 * Minor other fixes.

8.0_pre1 (api:80/proto:80)
--------
 * Removed support for Linux-2.4.x
 * Cleanup of the wire protocol.
 * Added optional peer authentication with a shared secret.
 * Consolidated state changes into a central function.
 * Improved, tunable after-split-brain recovery strategies.
 * Always verify all IDs used in the protocol that are used as pointers.
 * Introduced the "outdate" disk state, and commands for managing it.
 * Introduced the "drbdmeta" command, and require the user to create
   meta-data explicitly.
 * Support for primary/primary (for OCFS2, GFS...)
 * Replaced the sync-groups with the sync-after mechanism.
 * The "common" section in the configuration file.
 * Replaced the generation counters (GCs) with data-generation-UUIDs
 * Improved performance by using Linux-2.6's BIOs with up to 32k per
   IO request. Before we transferred only up to 4k per IO request.
 * A Warning if the disk sizes are more than 10% different.
 * A connection teardown packet to differentiate between a crash
   of the peer and a peer that is shut down gracefully.
 * External imposable SyncPause states, to serialize DRBD's resynchronization
   with the resynchronization of backing storage's RAID configurations.
 * Backing storage can be hot added to disk less nodes.
 * Prepared for advanced integration to Heartbeat-2.0
 * Changed internal APIs so that missed writes of the meta-data super
   block are reported as they happen.
 * The http://usage.drbd.org sub project.
 * Rewrote the scanner/parser of drbd.conf. 10 times smaller/faster and
   easier to maintain.
 * Asynchronous meta-data IO [ Code drop from the DRBD+ branch ]
