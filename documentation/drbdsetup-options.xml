<drbdsetup_options>
  <drbdsetup_option name="al-extents">
    <term>
      <option>al-extents <replaceable>extents</replaceable></option>
    </term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>al-extents</secondary>
	</indexterm> DRBD automatically performs hot area detection. With this parameter you
      control how big the hot area (= active set) can get. Each extent marks 4M of the
      backing storage (= low-level device). In case a primary node leaves the cluster
      unexpectedly, the areas covered by the active set must be resynced upon rejoining of
      the failed node. The data structure is stored in the meta-data area, therefore each
      change of the active set is a write operation to the meta-data device. A higher number
      of extents gives longer resync times but less updates to the meta-data. The default
      number of <replaceable>extents</replaceable> is 1237. (Minimum: 7, Maximum:
      6433)</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="al-updates">
    <term>
      <option>al-updates
	<group choice="req" rep="norepeat">
	  <arg choice="plain" rep="norepeat">yes</arg>
	  <arg choice="plain" rep="norepeat">no</arg>
        </group>
      </option>
    </term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>
	  <secondary>al-updates</secondary>
	</indexterm> DRBD's activity log transaction writing makes it possible, that
      after the crash of a primary node a partial (bit-map based) resync is
      sufficient to bring the node back to up-to-date.
      Setting <option>al-updates</option> to <option>no</option> might increase
      normal operation performance but causes DRBD to do a full resync
      when a crashed primary gets reconnected. The default value is <option>yes</option>.
      </para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="c-delay-target">
    <term><option>c-delay-target <replaceable>delay_target</replaceable></option></term>

    <term><option>c-fill-target <replaceable>fill_target</replaceable></option></term>

    <term><option>c-max-rate <replaceable>max_rate</replaceable></option></term>

    <term><option>c-plan-ahead <replaceable>plan_time</replaceable></option></term>

    <definition>
      <para>The dynamic resync speed controller gets enabled with setting
      <replaceable>plan_time</replaceable> to a positive value. It aims to fill the buffers
      along the data path with either a constant amount of data
      <replaceable>fill_target</replaceable>, or aims to have a constant delay time of
      <replaceable>delay_target</replaceable> along the path. The controller has an upper
      bound of <replaceable>max_rate</replaceable>.</para>

      <para>By <replaceable>plan_time</replaceable> the agility of the controller is
      configured. Higher values yield for slower/lower responses of the controller to
      deviation from the target value. It should be at least 5 times RTT. For regular data
      paths a <replaceable>fill_target</replaceable> in the area of 4k to 100k is
      appropriate. For a setup that contains drbd-proxy it is advisable to use
      <replaceable>delay_target</replaceable> instead. Only when
      <replaceable>fill_target</replaceable> is set to 0 the controller will use
      <replaceable>delay_target</replaceable>. 5 times RTT is a reasonable starting value.
      <replaceable>Max_rate</replaceable> should be set to the bandwidth available between
      the DRBD-hosts and the machines hosting DRBD-proxy, or to the available
      disk-bandwidth.</para>

      <para>The default value of <replaceable>plan_time</replaceable> is 0, the default unit
      is 0.1 seconds. <replaceable>Fill_target</replaceable> has 0 and sectors as default
      unit. <replaceable>Delay_target</replaceable> has 1 (100ms) and 0.1 as default unit.
      <replaceable>Max_rate</replaceable> has 10240 (100MiB/s) and KiB/s as default
      unit.</para>

      <para>The dynamic resync speed controller and its settings are available since DRBD
      8.3.9.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="c-min-rate">
    <term><option>c-min-rate <replaceable>min_rate</replaceable></option></term>

    <definition>
      <para>A node that is primary and sync-source has to schedule application IO requests
      and resync IO requests. The <replaceable>min_rate</replaceable> tells DRBD use only up
      to min_rate for resync IO and to dedicate all other available IO bandwidth to
      application requests.</para>

      <para>Note: The value 0 has a special meaning. It disables the limitation of resync IO
      completely, which might slow down application IO considerably. Set it to a value of 1,
      if you prefer that resync IO never slows down application IO.</para>

      <para>Note: Although the name might suggest that it is a lower bound for the dynamic
      resync speed controller, it is not. If the DRBD-proxy buffer is full, the dynamic
      resync speed controller is free to lower the resync speed down to 0, completely
      independent of the <option>c-min-rate</option> setting.</para>

      <para><replaceable>Min_rate</replaceable> has 4096 (4MiB/s) and KiB/s as default
      unit.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="disk-barrier">
    <term><option>disk-barrier</option></term>

    <term><option>disk-drain</option></term>

    <term><option>disk-flushes</option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>
	<secondary>disk-barrier</secondary>
      </indexterm>

      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>disk-flushes</secondary>
      </indexterm>

      <indexterm significance="normal">
	<primary>drbd.conf</primary>
	<secondary>disk-drain</secondary>
      </indexterm>

      <para>DRBD has four implementations to express write-after-write dependencies to its
      backing storage device. DRBD will use the first method that is supported by the
      backing storage device and that is not disabled. By default the <emphasis>flush</emphasis>
      method is used.</para>

      <para>Since drbd-8.4.2 <option>disk-barrier</option> is disabled by default
      because since linux-2.6.36 (or 2.6.32 RHEL6) there is no reliable way to determine if queuing
      of IO-barriers works. <emphasis>Dangerous</emphasis> only enable if you are
      told so by one that knows for sure.</para>

      <para>When selecting the method you should not only base your decision on the
      measurable performance. In case your backing storage device has a volatile write cache
      (plain disks, RAID of plain disks) you should use one of the first two. In case your
      backing storage device has battery-backed write cache you may go with option 3.
      Option 4 (disable everything, use "none") <emphasis>is dangerous</emphasis>
      on most IO stacks, may result in write-reordering, and if so,
      can theoretically be the reason for data corruption, or disturb
      the DRBD protocol, causing spurious disconnect/reconnect cycles.
      <emphasis>Do not use</emphasis> <option>no-disk-drain</option>.</para>

      <para>Unfortunately device mapper (LVM) might not support barriers.</para>

      <para>The letter after "wo:" in /proc/drbd indicates with method is currently in use
      for a device: <option>b</option>, <option>f</option>, <option>d</option>,
      <option>n</option>. The implementations are:</para>

      <variablelist>
	<varlistentry>
	  <term>barrier</term>

	  <listitem>
	    <para>The first requires that the driver of the backing storage device support
	    barriers (called 'tagged command queuing' in SCSI and 'native command queuing'
	    in SATA speak). The use of this method can be enabled by setting the
	    <option>disk-barrier</option> options to <option>yes</option>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>flush</term>

	  <listitem>
	    <para>The second requires that the backing device support disk flushes (called
	    'force unit access' in the drive vendors speak). The use of this method can be
	    disabled setting <option>disk-flushes</option> to <option>no</option>.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>drain</term>

	  <listitem>
	    <para>The third method is simply to let write requests drain before write
	    requests of a new reordering domain are issued. This was the only implementation
	    before 8.0.9.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>none</term>

	  <listitem>
	    <para>The fourth method is to not express write-after-write dependencies to
	    the backing store at all, by also specifying <option>no-disk-drain</option>.
	    This <emphasis>is dangerous</emphasis>
	    on most IO stacks, may result in write-reordering, and if so,
	    can theoretically be the reason for data corruption, or disturb
	    the DRBD protocol, causing spurious disconnect/reconnect cycles.
	    <emphasis>Do not use</emphasis> <option>no-disk-drain</option>.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="disk-timeout">
    <term>
      <option>disk-timeout</option>
    </term>
    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>
	<secondary>disk-timeout</secondary>
      </indexterm>
      <para>
	If the driver of the <replaceable>lower_device</replaceable>
	does not finish an IO request within <replaceable>disk_timeout</replaceable>,
	DRBD considers the disk as failed. If DRBD is connected to a remote host,
	it will reissue local pending IO requests to the peer, and ship all new
	IO requests to the peer only. The disk state advances to diskless, as soon
	as the backing block device has finished all IO requests.</para>
	<para> The default value of is 0, which means that no timeout is enforced.
	The default unit is 100ms. This option is available since 8.3.12.
	</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="fencing">
    <term><option>fencing <replaceable>fencing_policy</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>fencing</secondary>
	</indexterm> By <option>fencing</option> we understand preventive measures to avoid
      situations where both nodes are primary and disconnected (AKA split brain).</para>

      <para>Valid fencing policies are:</para>

      <variablelist>
	<varlistentry>
	  <term><option>dont-care</option></term>

	  <listitem>
	    <para>This is the default policy. No fencing actions are taken.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>resource-only</option></term>

	  <listitem>
	    <para>If a node becomes a disconnected primary, it tries to fence the peer's
	    disk. This is done by calling the <option>fence-peer</option> handler. The
	    handler is supposed to reach the other node over alternative communication paths
	    and call '<option>drbdadm outdate res</option>' there.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>resource-and-stonith</option></term>

	  <listitem>
	    <para>If a node becomes a disconnected primary, it freezes all its IO operations
	    and calls its fence-peer handler. The fence-peer handler is supposed to reach
	    the peer over alternative communication paths and call 'drbdadm outdate res'
	    there. In case it cannot reach the peer it should stonith the peer. IO is
	    resumed as soon as the situation is resolved. In case your handler fails, you
	    can resume IO with the <option>resume-io</option> command.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="max-bio-bvecs">
    <term><option>max-bio-bvecs</option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>max-bio-bvecs</secondary>
      </indexterm>

      <para>In some special circumstances the device mapper stack manages to pass BIOs to
      DRBD that violate the constraints that are set forth by DRBD's merge_bvec() function
      and which have more than one bvec. A known example is: phys-disk -&gt; DRBD -&gt; LVM
      -&gt; Xen -&gt; misaligned partition (63) -&gt; DomU FS. Then you might see "bio would
      need to, but cannot, be split:" in the Dom0's kernel log.</para>

      <para>The best workaround is to proper align the partition within the VM (E.g. start
      it at sector 1024). This costs 480 KiB of storage. Unfortunately the default of most
      Linux partitioning tools is to start the first partition at an odd number (63).
      Therefore most distribution's install helpers for virtual linux machines will end up
      with misaligned partitions. The second best workaround is to limit DRBD's max bvecs
      per BIO (= <option>max-bio-bvecs</option>) to 1, but that might cost
      performance.</para>

      <para>The default value of <option>max-bio-bvecs</option> is 0, which means that there
      is no user imposed limitation.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="md-flushes">
    <term><option>md-flushes</option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>md-flushes</secondary>
      </indexterm>

      <para>Disables the use of disk flushes and barrier BIOs when accessing the meta data
      device. See the notes on <option>disk-flushes</option>.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="on-io-error">
    <term><option>on-io-error <replaceable>handler</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>on-io-error</secondary>
	</indexterm><replaceable>handler</replaceable> is taken, if the lower level device
      reports io-errors to the upper layers.</para>

      <para><replaceable>handler</replaceable> may be <option>pass_on</option>,
      <option>call-local-io-error</option> or <option>detach.</option></para>

      <para><option>pass_on</option>: The node downgrades the disk status to inconsistent, marks the
      erroneous block as inconsistent in the bitmap and retries the IO on the remote node.</para>

      <para><option>call-local-io-error</option>: Call the handler script
      <option>local-io-error</option>.</para>

      <para><option>detach</option>: The node drops its low level device, and continues in
      diskless mode.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="read-balancing">
    <term>
      <option>read-balancing <replaceable>method</replaceable></option>
    </term>
    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>
	<secondary>read-balancing</secondary>
      </indexterm>
      <para>
	The supported <replaceable>methods</replaceable> for load balancing of
	read requests are <option>prefer-local</option>, <option>prefer-remote</option>,
	<option>round-robin</option>, <option>least-pending</option>,
	<option>when-congested-remote</option>, <option>32K-striping</option>,
	<option>64K-striping</option>, <option>128K-striping</option>,
	<option>256K-striping</option>, <option>512K-striping</option>
	and <option>1M-striping</option>.</para>
	<para> The default value of is <option>prefer-local</option>.
	This option is available since 8.4.1.
	</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="resync-after">
    <term><option>resync-after <replaceable>res-name</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>resync-after</secondary>
	</indexterm> By default, resynchronization of all devices would run in parallel. By
      defining a resync-after dependency, the resynchronization of this resource will start
      only if the resource <replaceable>res-name</replaceable> is already in connected state
      (i.e., has finished its resynchronization).</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="resync-rate">
    <term><option>resync-rate <replaceable>rate</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>resync-rate</secondary>
	</indexterm> To ensure a smooth operation of the application on top of DRBD, it is
      possible to limit the bandwidth which may be used by background synchronizations. The
      default is 250 KB/sec, the default unit is KB/sec. Optional suffixes K, M, G are
      allowed.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="disk-size">
    <term><option>--disk-size
    <replaceable>size</replaceable></option></term>

    <definition>
      <para>You can override DRBD's size determination method with this option. If you need
      to use the device before it was ever connected to its peer, use this option to pass
      the <replaceable>size</replaceable> of the DRBD device to the driver. Default unit is
      sectors (1s = 512 bytes).</para>

      <para>If you use the <replaceable>size</replaceable> parameter in drbd.conf, we
      strongly recommend to add an explicit unit postfix. drbdadm and drbdsetup used to have
      mismatching default units.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="dialog-refresh">
    <term><option>dialog-refresh <replaceable>time</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>dialog-refresh</secondary>
	</indexterm><replaceable>time</replaceable> may be 0 or a positive number.</para>

      <para>The user dialog redraws the second count every <replaceable>time</replaceable>
      seconds (or does no redraws if <replaceable>time</replaceable> is 0). The default
      value is 1.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="disable-ip-verification">
    <term><option>disable-ip-verification</option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>disable-ip-verification</secondary>
      </indexterm>

      <para>Use <replaceable>disable-ip-verification</replaceable> if, for some obscure
      reasons, drbdadm can/might not use <option>ip</option> or <option>ifconfig</option> to
      do a sanity check for the IP address. You can disable the IP verification with this
      option.</para>
    </definition>
  </drbdsetup_option>
  <drbdsetup_option name="usage-count">
    <term><option>usage-count <replaceable>val</replaceable></option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>usage-count</secondary>
      </indexterm>

      <para>Please participate in
      <ulink url="http://usage.drbd.org"><citetitle>DRBD's online usage counter</citetitle></ulink>.
       The most convenient way to do so is to set
      this option to <option>yes</option>. Valid options are: <option>yes</option>,
      <option>no</option> and <option>ask</option>.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="after-sb-0pri">
    <term><option>after-sb-0pri </option> <replaceable>policy</replaceable></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>after-sb-0pri</secondary>
      </indexterm>

      <para>possible policies are:</para>

      <variablelist>
	<varlistentry>
	  <term><option>disconnect</option></term>

	  <listitem>
	    <para>No automatic resynchronization, simply disconnect.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-younger-primary</option></term>

	  <listitem>
	    <para>Auto sync from the node that was primary before the split-brain situation
	    happened.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-older-primary</option></term>

	  <listitem>
	    <para>Auto sync from the node that became primary as second during the
	    split-brain situation.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-zero-changes</option></term>

	  <listitem>
	    <para>In case one node did not write anything since the split brain became
	    evident, sync from the node that wrote something to the node that did not write
	    anything. In case none wrote anything this policy uses a random decision to
	    perform a "resync" of 0 blocks. In case both have written something this policy
	    disconnects the nodes.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-least-changes</option></term>

	  <listitem>
	    <para>Auto sync from the node that touched more blocks during the split brain
	    situation.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-node-NODENAME</option></term>

	  <listitem>
	    <para>Auto sync to the named node.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="after-sb-1pri">
    <term><option>after-sb-1pri </option> <replaceable>policy</replaceable></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>after-sb-1pri</secondary>
      </indexterm>

      <para>possible policies are:</para>

      <variablelist>
	<varlistentry>
	  <term><option>disconnect</option></term>

	  <listitem>
	    <para>No automatic resynchronization, simply disconnect.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>consensus</option></term>

	  <listitem>
	    <para>Discard the version of the secondary if the outcome of the
	    <option>after-sb-0pri</option> algorithm would also destroy the current
	    secondary's data. Otherwise disconnect.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>violently-as0p</option></term>

	  <listitem>
	    <para>Always take the decision of the <option>after-sb-0pri</option> algorithm,
	    even if that causes an erratic change of the primary's view of the data. This is
	    only useful if you use a one-node FS (i.e. not OCFS2 or GFS) with the
	    <option>allow-two-primaries</option> flag, <emphasis>AND</emphasis> if you
	    really know what you are doing. This is <emphasis>DANGEROUS and MAY CRASH YOUR
	    MACHINE</emphasis> if you have an FS mounted on the primary node.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>discard-secondary</option></term>

	  <listitem>
	    <para>Discard the secondary's version.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>call-pri-lost-after-sb</option></term>

	  <listitem>
	    <para>Always honor the outcome of the <option>after-sb-0pri </option> algorithm.
	    In case it decides the current secondary has the right data, it calls the
	    "pri-lost-after-sb" handler on the current primary.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="after-sb-2pri">
    <term><option>after-sb-2pri </option> <replaceable>policy</replaceable></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>after-sb-2pri</secondary>
      </indexterm>

      <para>possible policies are:</para>

      <variablelist>
	<varlistentry>
	  <term><option>disconnect</option></term>

	  <listitem>
	    <para>No automatic resynchronization, simply disconnect.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>violently-as0p</option></term>

	  <listitem>
	    <para>Always take the decision of the <option>after-sb-0pri</option> algorithm,
	    even if that causes an erratic change of the primary's view of the data. This is
	    only useful if you use a one-node FS (i.e. not OCFS2 or GFS) with the
	    <option>allow-two-primaries</option> flag, <emphasis>AND</emphasis> if you
	    really know what you are doing. This is <emphasis>DANGEROUS and MAY CRASH YOUR
	    MACHINE</emphasis> if you have an FS mounted on the primary node.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>call-pri-lost-after-sb</option></term>

	  <listitem>
	    <para>Call the "pri-lost-after-sb" helper program on one of the machines. This
	    program is expected to reboot the machine, i.e. make it secondary.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="allow-two-primaries">
    <term><option>allow-two-primaries</option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>allow-two-primaries</secondary>
	</indexterm> With this option set you may assign the primary role to both nodes. You
      only should use this option if you use a shared storage file system on top of DRBD. At
      the time of writing the only ones are: OCFS2 and GFS. If you use this option with any
      other file system, you are going to crash your nodes and to corrupt your data!</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="always-asbp">
    <term><option>always-asbp</option></term>

    <definition>
      <para>Normally the automatic after-split-brain policies are only used if current
      states of the UUIDs do not indicate the presence of a third node.</para>

      <para>With this option you request that the automatic after-split-brain policies are
      used as long as the data sets of the nodes are somehow related. This might cause a
      full sync, if the UUIDs indicate the presence of a third node. (Or double faults led
      to strange UUID sets.)</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="connect-int">
    <term><option>connect-int <replaceable>time</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>connect-int</secondary>
	</indexterm> In case it is not possible to connect to the remote DRBD device
      immediately, DRBD keeps on trying to connect. With this option you can set the time
      between two retries. The default value is 10 seconds, the unit is 1 second.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="cram-hmac-alg">
    <term><option>cram-hmac-alg</option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>cram-hmac-alg</secondary>
	</indexterm> You need to specify the HMAC algorithm to enable peer authentication at
      all. You are strongly encouraged to use peer authentication. The HMAC algorithm will
      be used for the challenge response authentication of the peer. You may specify any
      digest algorithm that is named in <option>/proc/crypto</option>.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="csums-alg">
    <term><option>csums-alg <replaceable>hash-alg</replaceable></option></term>

    <definition>
      <para>A resync process sends all marked data blocks from the source to the destination
      node, as long as no <option>csums-alg</option> is given. When one is specified the
      resync process exchanges hash values of all marked blocks first, and sends only those
      data blocks that have different hash values.</para>

      <para>This setting is useful for DRBD setups with low bandwidth links. During the
      restart of a crashed primary node, all blocks covered by the activity log are marked
      for resync. But a large part of those will actually be still in sync, therefore using
      <option>csums-alg</option> will lower the required bandwidth in exchange for CPU
      cycles.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="data-integrity-alg">
    <term><option>data-integrity-alg </option> <replaceable>alg</replaceable></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>data-integrity-alg</secondary>
      </indexterm>

      <para>DRBD can ensure the data integrity of the user's data on the network by
      comparing hash values. Normally this is ensured by the 16 bit checksums in the headers
      of TCP/IP packets.</para>

      <para>This option can be set to any of the kernel's data digest algorithms. In a
      typical kernel configuration you should have at least one of <option>md5</option>,
      <option>sha1</option>, and <option>crc32c</option> available. By default this is not
      enabled.</para>

      <para>See also the notes on data integrity.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="ko-count">
    <term><option>ko-count <replaceable>number</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>ko-count</secondary>
	</indexterm> In case the secondary node fails to complete a single write request for
      <replaceable>count</replaceable> times the <replaceable>timeout</replaceable>, it is
      expelled from the cluster. (I.e. the primary node goes into
      <option>StandAlone</option> mode.) The default value is 0, which disables this
      feature.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="max-buffers">
    <term><option>max-buffers <replaceable>number</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>max-buffers</secondary>
	</indexterm> Maximum number of requests to be allocated by DRBD. Unit is PAGE_SIZE,
      which is 4 KiB on most systems. The minimum is hard coded to 32 (=128 KiB). For
      high-performance installations it might help if you increase that number. These
      buffers are used to hold data blocks while they are written to disk.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="max-epoch-size">
    <term><option>max-epoch-size <replaceable>number</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>max-epoch-size</secondary>
	</indexterm> The highest number of data blocks between two write barriers. If you
      set this smaller than 10, you might decrease your performance.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="on-congestion">
    <term><option>on-congestion <replaceable>congestion_policy</replaceable></option></term>

    <term><option>congestion-fill <replaceable>fill_threshold</replaceable></option></term>

    <term><option>congestion-extents
    <replaceable>active_extents_threshold</replaceable></option></term>

    <definition>
      <para>By default DRBD blocks when the available TCP send queue becomes full. That
      means it will slow down the application that generates the write requests that cause
      DRBD to send more data down that TCP connection.</para>

      <para>When DRBD is deployed with DRBD-proxy it might be more desirable that DRBD goes
      into AHEAD/BEHIND mode shortly before the send queue becomes full. In AHEAD/BEHIND
      mode DRBD does no longer replicate data, but still keeps the connection open.</para>

      <para>The advantage of the AHEAD/BEHIND mode is that the application is not slowed
      down, even if DRBD-proxy's buffer is not sufficient to buffer all write requests. The
      downside is that the peer node falls behind, and that a resync will be necessary to
      bring it back into sync. During that resync the peer node will have an inconsistent
      disk.</para>

      <para>Available <replaceable>congestion_policy</replaceable>s are
      <option>block</option> and <option>pull-ahead</option>. The default is
      <option>block</option>. <replaceable>Fill_threshold</replaceable> might be in the
      range of 0 to 10GiBytes. The default is 0 which disables the check.
      <replaceable>Active_extents_threshold</replaceable> has the same limits as
      <option>al-extents</option>.</para>

      <para>The AHEAD/BEHIND mode and its settings are available since DRBD 8.3.10.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="ping-int">
    <term><option>ping-int <replaceable>time</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>ping-int</secondary>
	</indexterm> If the TCP/IP connection linking a DRBD device pair is idle for more
      than <replaceable>time</replaceable> seconds, DRBD will generate a keep-alive packet
      to check if its partner is still alive. The default is 10 seconds, the unit is 1
      second.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="ping-timeout">
    <term><option>ping-timeout <replaceable>time</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>ping-timeout</secondary>
	</indexterm> The time the peer has time to answer to a keep-alive packet. In case
      the peer's reply is not received within this time period, it is considered as dead.
      The default value is 500ms, the default unit are tenths of a second.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="protocol">
    <term><option>protocol <replaceable>prot-id</replaceable></option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>protocol</secondary>
      </indexterm>

      <para>On the TCP/IP link the specified <replaceable>protocol</replaceable> is used.
      Valid protocol specifiers are A, B, and C.</para>

      <para>Protocol A: write IO is reported as completed, if it has reached local disk and
      local TCP send buffer.</para>

      <para>Protocol B: write IO is reported as completed, if it has reached local disk and
      remote buffer cache.</para>

      <para>Protocol C: write IO is reported as completed, if it has reached both local and
      remote disk.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="rcvbuf-size">
    <term><option>rcvbuf-size <replaceable>size</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>rcvbuf-size</secondary>
	</indexterm><replaceable>size</replaceable> is the size of the TCP socket receive
      buffer. The default value is 0, i.e. autotune. You can specify smaller or larger
      values. Usually this should be left at its default. Setting the
      <replaceable>size</replaceable> value to 0 means that the kernel should autotune
      this.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="rr-conflict">
    <term><option>rr-conflict </option> <replaceable>policy</replaceable></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>rr-conflict</secondary>
      </indexterm>

      <para>This option helps to solve the cases when the outcome of the resync decision is
      incompatible with the current role assignment in the cluster.</para>

      <variablelist>
	<varlistentry>
	  <term><option>disconnect</option></term>

	  <listitem>
	    <para>No automatic resynchronization, simply disconnect.</para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>violently</option></term>

	  <listitem>
	    <para>Sync to the primary node is allowed, violating the assumption that data on
	    a block device are stable for one of the nodes. <emphasis>Dangerous, do not
	    use.</emphasis></para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>call-pri-lost</option></term>

	  <listitem>
	    <para>Call the "pri-lost" helper program on one of the machines. This program is
	    expected to reboot the machine, i.e. make it secondary.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="shared-secret">
    <term><option>shared-secret</option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>shared-secret</secondary>
	</indexterm> The shared secret used in peer authentication. May be up to 64
      characters. Note that peer authentication is disabled as long as no
      <option>cram-hmac-alg</option> (see above) is specified.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="sndbuf-size">
    <term><option>sndbuf-size <replaceable>size</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>sndbuf-size</secondary>
	</indexterm><replaceable>size</replaceable> is the size of the TCP socket send
      buffer. The default value is 0, i.e. autotune. You can specify smaller or larger
      values. Larger values are appropriate for reasonable write throughput with protocol A
      over high latency networks. Values below 32K do not make sense. Since 8.0.13 resp.
      8.2.7, setting the <replaceable>size</replaceable> value to 0 means that the kernel
      should autotune this.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="tcp-cork">
    <term><option>tcp-cork</option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>tcp-cork</secondary>
      </indexterm>

      <para>DRBD usually uses the TCP socket option TCP_CORK to hint to the network stack
      when it can expect more data, and when it should flush out what it has in its send
      queue. It turned out that there is at least one network stack that performs worse when
      one uses this hinting method. Therefore we introducted this option. By setting
      <option>tcp-cork</option> to <option>no</option> you can disable the setting and
      clearing of the TCP_CORK socket option by DRBD.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="timeout">
    <term><option>timeout <replaceable>time</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>timeout</secondary>
	</indexterm> If the partner node fails to send an expected response packet within
      <replaceable>time</replaceable> tenths of a second, the partner node is considered
      dead and therefore the TCP/IP connection is abandoned. This must be lower than
      <replaceable>connect-int</replaceable> and <replaceable>ping-int</replaceable>. The
      default value is 60 = 6 seconds, the unit 0.1 seconds.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="unplug-watermark">
    <term><option>unplug-watermark <replaceable>number</replaceable></option></term>

    <definition>
      <indexterm significance="normal">
	<primary>drbd.conf</primary>

	<secondary>unplug-watermark</secondary>
      </indexterm>

      <para>When the number of pending write requests on the standby (secondary) node
      exceeds the <option>unplug-watermark</option>, we trigger the request processing of
      our backing storage device. Some storage controllers deliver better performance with
      small values, others deliver best performance when the value is set to the same value
      as max-buffers. Minimum 16, default 128, maximum 131072.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="use-rle">
    <term><option>use-rle</option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>use-rle</secondary>
	</indexterm> During resync-handshake, the dirty-bitmaps of the nodes are exchanged
      and merged (using bit-or), so the nodes will have the same understanding of which
      blocks are dirty. On large devices, the fine grained dirty-bitmap can become large as
      well, and the bitmap exchange can take quite some time on low-bandwidth links.</para>

      <para>Because the bitmap typically contains compact areas where all bits are unset
      (clean) or set (dirty), a simple run-length encoding scheme can considerably reduce
      the network traffic necessary for the bitmap exchange.</para>

      <para>For backward compatibilty reasons, and because on fast links this possibly does
      not improve transfer time but consumes cpu cycles, this defaults to off.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="verify-alg">
    <term><option>verify-alg <replaceable>hash-alg</replaceable></option></term>

    <definition>
      <para>During online verification (as initiated by the <command
      moreinfo="none">verify</command> sub-command), rather than doing a bit-wise
      comparison, DRBD applies a hash function to the contents of every block being
      verified, and compares that hash with the peer. This option defines the hash algorithm
      being used for that purpose. It can be set to any of the kernel's data digest
      algorithms. In a typical kernel configuration you should have at least one of
      <option>md5</option>, <option>sha1</option>, and <option>crc32c</option> available. By
      default this is not enabled; you must set this option explicitly in order to be able
      to use on-line device verification.</para>

      <para>See also the notes on data integrity.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="discard-my-data">
    <term><option>--discard-my-data</option></term>

    <definition>
      <para>Use this option to manually recover from a split-brain situation. In case you do
      not have any automatic after-split-brain policies selected, the nodes refuse to
      connect. By passing this option you make this node a sync target immediately after
      successful connect.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="tentative">
    <term><option>--tentative</option></term>

    <definition>
      <para>Causes DRBD to abort the connection process after the resync handshake, i.e. no
      resync gets performed. You can find out which resync DRBD would perform by looking at
      the kernel's log file.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="auto-promote">
    <term><option>auto-promote <replaceable>bool-value</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>auto-promote</secondary>
	</indexterm>

      If <option>auto-promote</option> is set to
      <constant>yes</constant> then DRBD tries to promote the resource
      when it some process opens on of the resource's devices in r/w
      mode. It gets demoted to secondary after all openers have
      exited closed the device.
      In case promotion fails (e.g. because the resource is already
      primary on an other node, and <option>allow-two-primaries</option>
      is not set), the
      <citerefentry><refentrytitle>open</refentrytitle><manvolnum>2</manvolnum></citerefentry>
      system call fails with errno set to
      <constant>EMEDIUMTYPE</constant> ("Wrong medium type").
      </para>
      <para>Explicit promotion (by using the
      <command>primary</command> command) is still possible. To revert
      the effect of an explicit promotion an explicit demotion
      (<command>secondary</command> command is necessary).</para>
      <para>The default value is <constant>yes</constant>. This option is available since
      9.0.0</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="cpu-mask">
    <term><option>cpu-mask <replaceable>cpu-mask</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>cpu-mask</secondary>
	</indexterm> Sets the cpu-affinity-mask for DRBD's kernel threads of this device.
      The default value of <replaceable>cpu-mask</replaceable> is 0, which means that DRBD's
      kernel threads should be spread over all CPUs of the machine. This value must be given
      in hexadecimal notation. If it is too big it will be truncated.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="on-no-data-accessible">
    <term><option>on-no-data-accessible
    <replaceable>ond-policy</replaceable></option></term>

    <definition>
      <para>This setting controls what happens to IO requests on a degraded, disk less node
      (I.e. no data store is reachable). The available policies are
      <option>io-error</option> and <option>suspend-io</option>.</para>

      <para>If <replaceable>ond-policy</replaceable> is set to <option>suspend-io</option>
      you can either resume IO by attaching/connecting the last lost data storage, or by the
      <command moreinfo="none">drbdadm resume-io <replaceable>res</replaceable></command>
      command. The latter will result in IO errors of course.</para>

      <para>The default is <option>io-error</option>. This setting is available since DRBD
      8.3.9.</para>
    </definition>
  </drbdsetup_option>

  <drbdsetup_option name="peer-ack-window">
    <term><option>peer-ack-window <replaceable>value</replaceable></option></term>

    <definition>
      <para><indexterm significance="normal">
	  <primary>drbd.conf</primary>

	  <secondary>peer-ack-window</secondary>
	</indexterm>
	The <replaceable>value</replaceable> specifies how much data is may be
	replicated until a peer-ack packet is sent to all secondary nodes in the
	cluster. A higher value decreases network traffic caused by these
	packets, but increases memory consumption on the secondary nodes. For
	each write request a secondary node has to keep a peer-request object
	until the next peer-ack packet comes in.</para>
	<para>The peer-ack-window is also an upper bound for the size of the
	reconciliation resync between two secondaries after a primary node crashed.</para>
	<para> The default value of is <option>peer-ack-window</option> is 4096 sectors
	(2 MiByte), the default unit is sectors. This option is available since 9.0.0.</para>
    </definition>
  </drbdsetup_option>
</drbdsetup_options>
